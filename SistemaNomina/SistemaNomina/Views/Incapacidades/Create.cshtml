@model SistemaNomina.Models.Incapacidades

@{
    ViewBag.Title = "Registrar Incapacidad";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <!-- Header -->
            <div class="page-header mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="page-title">
                            <i class="fas fa-user-injured text-primary"></i>
                            Registrar Nueva Incapacidad
                        </h2>
                        <p class="text-muted">Complete la información de la incapacidad médica</p>
                    </div>
                    <div class="page-actions">
                        @Html.ActionLink("Volver a Lista", "Index", null, new { @class = "btn btn-secondary btn-lg" })
                    </div>
                </div>
            </div>

            <!-- Mensajes de estado -->
            @if (ViewData.ModelState.Count > 0 && !ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Por favor corrija los siguientes errores:</strong>
                    <ul class="mb-0 mt-2">
                        @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@modelError.ErrorMessage</li>
                        }
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Formulario principal -->
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-plus-circle"></i>
                        Datos de la Incapacidad
                    </h5>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Incapacidades", FormMethod.Post, new { @class = "needs-validation", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <!-- Información del Empleado -->
                            <div class="col-md-6">
                                <div class="form-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-user"></i> Información del Empleado
                                    </h6>

                                    <div class="form-group mb-3">
                                        <label for="id_empleado" class="form-label required">Empleado</label>
                                        @Html.DropDownList("id_empleado", null, "-- Seleccione un empleado --", new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.id_empleado, "", new { @class = "invalid-feedback" })
                                        <div class="form-text">Seleccione el empleado que presenta la incapacidad</div>
                                    </div>
                                </div>
                            </div>

                            <!-- Información de la Incapacidad -->
                            <div class="col-md-6">
                                <div class="form-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-clipboard-list"></i> Datos de la Incapacidad
                                    </h6>

                                    <div class="form-group mb-3">
                                        <label for="id_tipo_incapacidad" class="form-label required">Tipo de Incapacidad</label>
                                        @Html.DropDownList("id_tipo_incapacidad", null, "-- Seleccione tipo --", new { @class = "form-control", @required = "required" })
                                        @Html.ValidationMessageFor(model => model.id_tipo_incapacidad, "", new { @class = "invalid-feedback" })
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="numero_boleta" class="form-label">Número de Boleta</label>
                                        @Html.EditorFor(model => model.numero_boleta, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ej: NB-12345" } })
                                        @Html.ValidationMessageFor(model => model.numero_boleta, "", new { @class = "invalid-feedback" })
                                        <div class="form-text">Número de boleta médica (opcional)</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Fechas -->
                            <div class="col-md-6">
                                <div class="form-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-calendar-alt"></i> Período de Incapacidad
                                    </h6>

                                    <div class="form-group mb-3">
                                        <label for="fecha_inicio" class="form-label required">Fecha de Inicio</label>
                                        @Html.EditorFor(model => model.fecha_inicio, new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.fecha_inicio, "", new { @class = "invalid-feedback" })
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="fecha_fin" class="form-label required">Fecha de Fin</label>
                                        @Html.EditorFor(model => model.fecha_fin, new { htmlAttributes = new { @class = "form-control", @type = "date", @required = "required" } })
                                        @Html.ValidationMessageFor(model => model.fecha_fin, "", new { @class = "invalid-feedback" })
                                        <div class="form-text">La fecha de fin debe ser posterior a la fecha de inicio</div>
                                    </div>

                                    <!-- Cálculo automático de días -->
                                    <div class="alert alert-info d-none" id="diasCalculados">
                                        <i class="fas fa-calculator"></i>
                                        <strong>Días calculados:</strong> <span id="totalDias">0</span> días
                                    </div>
                                </div>
                            </div>

                            <!-- Estado y Descripción -->
                            <div class="col-md-6">
                                <div class="form-section">
                                    <h6 class="section-title">
                                        <i class="fas fa-info-circle"></i> Información Adicional
                                    </h6>

                                    <div class="form-group mb-3">
                                        <label for="id_estado" class="form-label">Estado</label>
                                        @Html.DropDownList("id_estado", null, "-- Estado por defecto --", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.id_estado, "", new { @class = "invalid-feedback" })
                                        <div class="form-text">El estado se asigna automáticamente como "Pendiente"</div>
                                    </div>

                                    <div class="form-group mb-3">
                                        <label for="descripcion" class="form-label">Descripción</label>
                                        @Html.TextAreaFor(model => model.descripcion, new { @class = "form-control", @rows = "4", @placeholder = "Descripción detallada de la incapacidad (opcional)" })
                                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "invalid-feedback" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Botones de acción -->
                        <div class="form-actions mt-4">
                            <div class="d-flex justify-content-between">
                                <div>
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-outline-secondary btn-lg" })
                                </div>
                                <div>
                                    <button type="reset" class="btn btn-outline-warning btn-lg me-2">
                                        <i class="fas fa-undo"></i> Limpiar
                                    </button>
                                    <button type="submit" class="btn btn-success btn-lg">
                                        <i class="fas fa-save"></i> Registrar Incapacidad
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <style>
        /* Estilos personalizados consistentes con Index */
        .page-header {
            background-color: #007bff;
            color: white;
            padding: 2rem;
            border-radius: 0.5rem;
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border-radius: 0.5rem;
        }

        .card-header {
            background-color: #007bff !important;
            border-bottom: 1px solid #dee2e6;
        }

        .form-section {
            background-color: #f8f9fa;
            padding: 1.5rem;
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
            border-left: 4px solid #007bff;
        }

        .section-title {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #dee2e6;
        }

        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .form-label.required::after {
            content: " *";
            color: #dc3545;
        }

        .form-control {
            border-radius: 0.375rem;
            border: 1px solid #ced4da;
            padding: 0.75rem;
            font-size: 1rem;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .form-text {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 0.25rem;
        }

        .invalid-feedback {
            display: block;
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .form-actions {
            background-color: #f8f9fa;
            padding: 1.5rem;
            border-radius: 0.5rem;
            border-top: 2px solid #dee2e6;
        }

        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 0.5rem;
        }

        .alert {
            border: none;
            border-radius: 0.5rem;
        }

        /* Responsivo */
        @@media (max-width: 768px) {
            .page-header {
                padding: 1.5rem;
            }

            .page-title {
                font-size: 1.5rem;
            }

            .form-section {
                padding: 1rem;
                margin-bottom: 1rem;
            }

            .d-flex.justify-content-between {
                flex-direction: column;
                gap: 1rem;
            }

            .btn-lg {
                width: 100%;
                margin-bottom: 0.5rem;
            }
        }
    </style>

    <script>
        $(document).ready(function() {
            // Calcular días automáticamente
            function calcularDias() {
                var fechaInicio = $('#fecha_inicio').val();
                var fechaFin = $('#fecha_fin').val();

                if (fechaInicio && fechaFin) {
                    var inicio = new Date(fechaInicio);
                    var fin = new Date(fechaFin);

                    if (fin >= inicio) {
                        var timeDiff = fin.getTime() - inicio.getTime();
                        var dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1;

                        $('#totalDias').text(dayDiff);
                        $('#diasCalculados').removeClass('d-none');

                        // Remover error si existía
                        $('#fecha_fin').removeClass('is-invalid');
                    } else {
                        $('#diasCalculados').addClass('d-none');
                        $('#fecha_fin').addClass('is-invalid');
                    }
                }
            }

            // Eventos para cálculo de días
            $('#fecha_inicio, #fecha_fin').on('change', calcularDias);

            // Validación en tiempo real
            $('form').on('submit', function(e) {
                var fechaInicio = new Date($('#fecha_inicio').val());
                var fechaFin = new Date($('#fecha_fin').val());

                if (fechaFin <= fechaInicio) {
                    e.preventDefault();
                    alert('La fecha de fin debe ser posterior a la fecha de inicio.');
                    return false;
                }
            });

            // Mejorar validación visual
            $('.form-control').on('blur', function() {
                if ($(this).val()) {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                }
            });

            // Establecer fecha mínima
            var today = new Date().toISOString().split('T')[0];
            $('#fecha_inicio').attr('max', today);
            $('#fecha_fin').attr('min', today);
        });
    </script>
}