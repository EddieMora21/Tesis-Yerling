@model IEnumerable<SistemaNomina.Models.SolicitudesVacaciones>

@{
    ViewBag.Title = "Solicitudes Pendientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@functions {
    public static int CalcularDiasLaborales(DateTime inicio, DateTime fin)
    {
        int dias = 0;
        for (var fecha = inicio; fecha <= fin; fecha = fecha.AddDays(1))
        {
            if (fecha.DayOfWeek != DayOfWeek.Saturday && fecha.DayOfWeek != DayOfWeek.Sunday)
                dias++;
        }
        return dias;
    }
}

<div class="pendientes-container">
    <!-- Header -->
    <div class="page-header">
        <h2>⏳ Solicitudes Pendientes de Aprobación</h2>
        <p class="subtitle">Revisa y gestiona las solicitudes de vacaciones de tu equipo</p>
    </div>

    <!-- Estadísticas rápidas -->
    <div class="stats-grid">
        <div class="stat-card urgent">
            <div class="stat-icon">🚨</div>
            <div class="stat-content">
                <div class="stat-number">@Model.Count(s => s.fecha_solicitud.HasValue && (DateTime.Now - s.fecha_solicitud.Value).TotalDays > 7)</div>
                <div class="stat-label">Más de 7 días</div>
            </div>
        </div>
        <div class="stat-card warning">
            <div class="stat-icon">⚠️</div>
            <div class="stat-content">
                <div class="stat-number">@Model.Count(s => s.fecha_solicitud.HasValue && (DateTime.Now - s.fecha_solicitud.Value).TotalDays > 3)</div>
                <div class="stat-label">Más de 3 días</div>
            </div>
        </div>
        <div class="stat-card total">
            <div class="stat-icon">📊</div>
            <div class="stat-content">
                <div class="stat-number">@Model.Count()</div>
                <div class="stat-label">Total Pendientes</div>
            </div>
        </div>
    </div>

    <!-- Barra de filtros -->
    <div class="filter-bar">
        <div class="filter-left">
            <button class="filter-btn active" data-filter="all">📊 Todas (@Model.Count())</button>
            <button class="filter-btn" data-filter="urgent">🚨 Urgentes (@Model.Count(s => s.fecha_solicitud.HasValue && (DateTime.Now - s.fecha_solicitud.Value).TotalDays > 7))</button>
            <button class="filter-btn" data-filter="recent">🆕 Recientes (@Model.Count(s => s.fecha_solicitud.HasValue && (DateTime.Now - s.fecha_solicitud.Value).TotalDays <= 1))</button>
        </div>
        <div class="filter-right">
            <input type="text" id="filtroEmpleado" placeholder="Buscar empleado..." class="search-input">
        </div>
    </div>

    <!-- Lista de solicitudes -->
    <div class="solicitudes-grid" id="solicitudesGrid">
        @if (Model != null && Model.Any())
        {
            foreach (var solicitud in Model.OrderByDescending(s => s.fecha_solicitud))
            {
                var diasSolicitados = CalcularDiasLaborales(solicitud.fecha_inicio, solicitud.fecha_fin);
                var diasEspera = solicitud.fecha_solicitud.HasValue ? (DateTime.Now - solicitud.fecha_solicitud.Value).TotalDays : 0;
                var urgenciaClass = diasEspera > 7 ? "urgent" : diasEspera > 3 ? "warning" : "normal";

                <div class="solicitud-card @urgenciaClass"
                     data-empleado="@(solicitud.Vacaciones?.Empleados?.nombre1 ?? "") @(solicitud.Vacaciones?.Empleados?.apellido1 ?? "")"
                     data-urgencia="@urgenciaClass">

                    <!-- Header de la tarjeta -->
                    <div class="card-header">
                        <div class="empleado-info">
                            <div class="empleado-avatar">
                                @{
                                    var nombre1 = solicitud.Vacaciones?.Empleados?.nombre1 ?? "?";
                                    var apellido1 = solicitud.Vacaciones?.Empleados?.apellido1 ?? "?";
                                }
                                @nombre1.Substring(0, 1).ToUpper()@apellido1.Substring(0, 1).ToUpper()
                            </div>
                            <div class="empleado-details">
                                <h3>@nombre1 @apellido1</h3>
                                <p>@(solicitud.Vacaciones?.Empleados?.cedula ?? "Sin cédula") | @(solicitud.Vacaciones?.Empleados?.Puestos?.nombre_puesto ?? "Sin puesto")</p>
                            </div>
                        </div>
                        <div class="urgencia-badge @urgenciaClass">
                            @if (diasEspera > 7)
                            {
                                <span>🚨 @((int)diasEspera) días</span>
                            }
                            else if (diasEspera > 3)
                            {
                                <span>⚠️ @((int)diasEspera) días</span>
                            }
                            else
                            {
                                <span>🆕 @((int)diasEspera) día(s)</span>
                            }
                        </div>
                    </div>

                    <!-- Detalles de la solicitud -->
                    <div class="card-body">
                        <div class="solicitud-details">
                            <div class="detail-row">
                                <div class="detail-item">
                                    <span class="detail-label">📅 Período:</span>
                                    <span class="detail-value">
                                        @solicitud.fecha_inicio.ToString("dd/MM/yyyy") - @solicitud.fecha_fin.ToString("dd/MM/yyyy")
                                    </span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">📊 Días:</span>
                                    <span class="detail-value dias-badge">@diasSolicitados días laborales</span>
                                </div>
                            </div>

                            <div class="detail-row">
                                <div class="detail-item">
                                    <span class="detail-label">📋 Disponibles:</span>
                                    <span class="detail-value">@((solicitud.Vacaciones?.dias_disponibles ?? 0) - (solicitud.Vacaciones?.dias_disfrutados ?? 0)) días</span>
                                </div>
                                <div class="detail-item">
                                    <span class="detail-label">📝 Solicitud:</span>
                                    <span class="detail-value">
                                        @if (solicitud.fecha_solicitud.HasValue)
                                        {
                                            @solicitud.fecha_solicitud.Value.ToString("dd/MM/yyyy HH:mm")
                                        }
                                        else
                                        {
                                            <text>Sin fecha</text>
                                        }
                                    </span>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(solicitud.comentario_solicitud))
                            {
                                <div class="comentario-solicitud">
                                    <span class="detail-label">💬 Comentario:</span>
                                    <p>"@solicitud.comentario_solicitud"</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Acciones -->
                    <div class="card-actions">
                        <button class="btn-action btn-details"
                                onclick="verDetalles(@solicitud.id_solicitud)">
                            👁️ Detalles
                        </button>

                        <button class="btn-action btn-approve"
                                onclick="aprobarSolicitud(@solicitud.id_solicitud, '@nombre1 @apellido1')">
                            ✅ Aprobar
                        </button>

                        <button class="btn-action btn-reject"
                                onclick="rechazarSolicitud(@solicitud.id_solicitud, '@nombre1 @apellido1')">
                            ❌ Rechazar
                        </button>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">🎉</div>
                <h3>¡Excelente trabajo!</h3>
                <p>No hay solicitudes pendientes de aprobación.</p>
                <a href="@Url.Action("Index")" class="btn btn-primary">
                    📊 Ver Todas las Solicitudes
                </a>
            </div>
        }
    </div>
</div>

<!-- Modal de aprobación/rechazo -->
<div id="modalDecision" class="modal" style="display: none;">
    <div class="modal-content">
        <div class="modal-header">
            <h4 id="modalTitulo">Confirmar Decisión</h4>
            <span class="modal-close">&times;</span>
        </div>
        <div class="modal-body">
            <div class="empleado-summary" id="empleadoSummary"></div>
            <form id="formDecision">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label for="comentarioDecision">💬 Comentario sobre tu decisión:</label>
                    <textarea id="comentarioDecision" class="form-textarea" rows="3"
                              placeholder="Explica brevemente el motivo de tu decisión..."></textarea>
                </div>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" id="btnConfirmarDecision" class="btn btn-primary">
                Confirmar
            </button>
            <button type="button" class="modal-close btn btn-secondary">
                Cancelar
            </button>
        </div>
    </div>
</div>

<!-- TODO EL CSS IGUAL QUE ANTES -->
<style>
    /* Mismo CSS de antes */
    .pendientes-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-header {
        margin-bottom: 30px;
        text-align: center;
    }

        .page-header h2 {
            color: #333;
            margin: 0 0 10px 0;
            font-size: 28px;
            font-weight: 300;
        }

    .subtitle {
        color: #6c757d;
        margin: 0;
        font-size: 16px;
    }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .stat-card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        display: flex;
        align-items: center;
        gap: 15px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        transition: transform 0.2s ease;
    }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-card.urgent {
            border-left: 4px solid #dc3545;
        }

        .stat-card.warning {
            border-left: 4px solid #ffc107;
        }

        .stat-card.total {
            border-left: 4px solid #007bff;
        }

    .stat-icon {
        font-size: 24px;
        opacity: 0.8;
    }

    .stat-number {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    .stat-label {
        font-size: 14px;
        color: #6c757d;
    }

    .filter-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #f8f9fa;
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 25px;
    }

    .filter-left {
        display: flex;
        gap: 10px;
    }

    .filter-btn {
        padding: 8px 16px;
        border: 2px solid transparent;
        border-radius: 6px;
        background: white;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
    }

        .filter-btn:hover,
        .filter-btn.active {
            border-color: #007bff;
            background: #007bff;
            color: white;
        }

    .search-input {
        padding: 8px 15px;
        border: 2px solid #e9ecef;
        border-radius: 6px;
        width: 250px;
        font-size: 14px;
    }

        .search-input:focus {
            outline: none;
            border-color: #007bff;
        }

    .solicitudes-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 20px;
    }

    .solicitud-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .solicitud-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .solicitud-card.urgent {
            border-left: 4px solid #dc3545;
        }

        .solicitud-card.warning {
            border-left: 4px solid #ffc107;
        }

        .solicitud-card.normal {
            border-left: 4px solid #28a745;
        }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        background: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
    }

    .empleado-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .empleado-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 14px;
    }

    .empleado-details h3 {
        margin: 0;
        font-size: 16px;
        color: #333;
    }

    .empleado-details p {
        margin: 0;
        font-size: 12px;
        color: #6c757d;
    }

    .urgencia-badge {
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
        color: white;
    }

        .urgencia-badge.urgent {
            background: #dc3545;
        }

        .urgencia-badge.warning {
            background: #ffc107;
            color: #212529;
        }

        .urgencia-badge.normal {
            background: #28a745;
        }

    .card-body {
        padding: 20px;
    }

    .detail-row {
        display: flex;
        gap: 20px;
        margin-bottom: 12px;
    }

    .detail-item {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .detail-label {
        font-size: 12px;
        color: #6c757d;
        font-weight: 600;
    }

    .detail-value {
        font-size: 14px;
        color: #333;
    }

    .dias-badge {
        background: #e3f2fd;
        color: #1976d2;
        padding: 2px 8px;
        border-radius: 4px;
        font-weight: 600;
        display: inline-block;
    }

    .comentario-solicitud {
        margin-top: 15px;
        padding: 10px;
        background: #f8f9fa;
        border-radius: 6px;
        border-left: 3px solid #007bff;
    }

        .comentario-solicitud p {
            margin: 5px 0 0 0;
            font-style: italic;
            color: #495057;
        }

    .card-actions {
        padding: 20px;
        background: #f8f9fa;
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .btn-action {
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 600;
        transition: all 0.3s ease;
        min-width: 90px;
    }

        .btn-action:hover {
            transform: translateY(-1px);
        }

    .btn-details {
        background: #17a2b8;
        color: white;
    }

        .btn-details:hover {
            background: #138496;
        }

    .btn-approve {
        background: #28a745;
        color: white;
    }

        .btn-approve:hover {
            background: #218838;
        }

    .btn-reject {
        background: #dc3545;
        color: white;
    }

        .btn-reject:hover {
            background: #c82333;
        }

    .empty-state {
        grid-column: 1 / -1;
        text-align: center;
        padding: 60px 20px;
        color: #6c757d;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 20px;
    }

    .empty-state h3 {
        margin: 20px 0 10px 0;
        color: #28a745;
    }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: white;
        border-radius: 8px;
        max-width: 500px;
        width: 90%;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px;
        border-bottom: 1px solid #dee2e6;
    }

        .modal-header h4 {
            margin: 0;
            color: #333;
        }

    .modal-close {
        font-size: 24px;
        cursor: pointer;
        color: #6c757d;
        background: none;
        border: none;
    }

    .modal-body {
        padding: 20px;
    }

    .empleado-summary {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 6px;
        margin-bottom: 20px;
        border-left: 4px solid #007bff;
    }

    .modal-footer {
        padding: 20px;
        display: flex;
        gap: 10px;
        justify-content: flex-end;
        border-top: 1px solid #dee2e6;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #333;
        }

    .form-textarea {
        width: 100%;
        padding: 10px;
        border: 2px solid #e9ecef;
        border-radius: 6px;
        font-size: 14px;
        font-family: inherit;
        resize: vertical;
        box-sizing: border-box;
    }

        .form-textarea:focus {
            outline: none;
            border-color: #007bff;
        }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: #007bff;
        color: white;
    }

        .btn-primary:hover {
            background: #0056b3;
        }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background: #5a6268;
        }

    @@media (max-width: 768px) {
        .filter-bar {
            flex-direction: column;
            gap: 15px;
        }

        .filter-left {
            justify-content: center;
            flex-wrap: wrap;
        }

        .search-input {
            width: 100%;
        }

        .solicitudes-grid {
            grid-template-columns: 1fr;
        }

        .detail-row {
            flex-direction: column;
            gap: 8px;
        }

        .card-actions {
            flex-direction: column;
        }

        .btn-action {
            width: 100%;
        }
    }
</style>

<!-- TODO EL JAVASCRIPT IGUAL QUE ANTES -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    let accionActual = null;
    let solicitudId = null;
    let empleadoNombre = null;

    const modal = document.getElementById('modalDecision');
    const modalTitulo = document.getElementById('modalTitulo');
    const btnConfirmar = document.getElementById('btnConfirmarDecision');
    const comentarioDecision = document.getElementById('comentarioDecision');
    const empleadoSummary = document.getElementById('empleadoSummary');

    // Filtros
    const filterBtns = document.querySelectorAll('.filter-btn');
    const filtroEmpleado = document.getElementById('filtroEmpleado');

    // Event listeners para filtros
    filterBtns.forEach(btn => {
        btn.addEventListener('click', function() {
            filterBtns.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
            filtrarSolicitudes();
        });
    });

    filtroEmpleado.addEventListener('input', filtrarSolicitudes);

    // Cerrar modal
    document.querySelectorAll('.modal-close').forEach(btn => {
        btn.addEventListener('click', function() {
            modal.style.display = 'none';
        });
    });

    // Confirmar decisión
    btnConfirmar.addEventListener('click', function() {
        ejecutarDecision();
    });

    // Funciones globales
    window.verDetalles = function(id) {
        window.location.href = '@Url.Action("Details", "SolicitudesVacaciones")/' + id;
    };

    window.aprobarSolicitud = function(id, nombre) {
        accionActual = 'aprobar';
        solicitudId = id;
        empleadoNombre = nombre;
        modalTitulo.textContent = '✅ Aprobar Solicitud de Vacaciones';
        btnConfirmar.textContent = '✅ Aprobar';
        btnConfirmar.className = 'btn btn-success';
        empleadoSummary.innerHTML = `<strong>Empleado:</strong> ${nombre}<br><strong>Acción:</strong> Aprobar solicitud`;
        comentarioDecision.placeholder = 'Comentario sobre la aprobación (opcional)...';
        modal.style.display = 'flex';
    };

    window.rechazarSolicitud = function(id, nombre) {
        accionActual = 'rechazar';
        solicitudId = id;
        empleadoNombre = nombre;
        modalTitulo.textContent = '❌ Rechazar Solicitud de Vacaciones';
        btnConfirmar.textContent = '❌ Rechazar';
        btnConfirmar.className = 'btn btn-danger';
        empleadoSummary.innerHTML = `<strong>Empleado:</strong> ${nombre}<br><strong>Acción:</strong> Rechazar solicitud`;
        comentarioDecision.placeholder = 'Motivo del rechazo (recomendado)...';
        modal.style.display = 'flex';
    };

    function filtrarSolicitudes() {
        const filtroActivo = document.querySelector('.filter-btn.active').dataset.filter;
        const textoEmpleado = filtroEmpleado.value.toLowerCase();
        const tarjetas = document.querySelectorAll('.solicitud-card');

        tarjetas.forEach(tarjeta => {
            const empleado = tarjeta.dataset.empleado.toLowerCase();
            const urgencia = tarjeta.dataset.urgencia;

            let mostrarPorFiltro = filtroActivo === 'all' ||
                                 (filtroActivo === 'urgent' && urgencia === 'urgent') ||
                                 (filtroActivo === 'recent' && urgencia === 'normal');

            let mostrarPorEmpleado = !textoEmpleado || empleado.includes(textoEmpleado);

            if (mostrarPorFiltro && mostrarPorEmpleado) {
                tarjeta.style.display = 'block';
            } else {
                tarjeta.style.display = 'none';
            }
        });
    }

    function ejecutarDecision() {
        if (!accionActual || !solicitudId) return;

        const url = accionActual === 'aprobar' ? '@Url.Action("Aprobar", "SolicitudesVacaciones")' : '@Url.Action("Rechazar", "SolicitudesVacaciones")';
        const datos = {
            id: solicitudId,
            comentario_respuesta: comentarioDecision.value,
            __RequestVerificationToken: document.querySelector('[name="__RequestVerificationToken"]').value
        };

        btnConfirmar.disabled = true;
        btnConfirmar.textContent = '⏳ Procesando...';

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(datos)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('✅ ' + data.message);
                location.reload();
            } else {
                alert('❌ ' + data.message);
            }
        })
        .catch(error => {
            alert('❌ Error de conexión');
        })
        .finally(() => {
            modal.style.display = 'none';
            btnConfirmar.disabled = false;
            comentarioDecision.value = '';
        });
    }
});
</script>